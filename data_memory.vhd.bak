library ieee;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;
use ieee.math_real.all;

entity data_memory is
port(data_in : in std_logic_vector(15 downto 0);
     address : in std_logic_vector(7 downto 0);
      data_out  : out std_logic_vector(15 downto 0);
		clk,w_ena,r_ena,reset  : in std_logic);
end data_memory;


architecure data_arch of data_memory is

type LUT_memory is array (255 downto 0) of std_logic_vector(15 downto 0);
signal memory : LUT_memory :=(others=>(others=>'0'));
begin


data_out <= memory(to_integer(unsigned(address)));

process(address,w_ena)------to select which register should be enabled to get written by data.
begin

ena <= (others => '0');
ena(to_integer(unsigned(sel_in))) <= write_ena;

end process;




end data_arch;