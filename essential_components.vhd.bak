library ieee;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;
use ieee.math_real.all;

package essential_components is
component reg is  
port( data_in : in std_logic_vector(15 downto 0);
       data_out : out std_logic_vector(15 downto 0);
       clk,enable,clear : in std_logic

);
end component;
end essential_components;



library ieee;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;
use ieee.math_real.all;

entity reg is 
port( data_in : in std_logic_vector(15 downto 0);
       data_out : out std_logic_vector(15 downto 0);
       clk,enable,clear : in std_logic

);
end reg;

architecture areg of reg is 
begin
 process(clk,clear,enable)
 begin
 
    if (clk'event and clk='1') then
      
		if (enable = '1') then
               data_out <= data_in;
	   end if;
	   if (clear = '1' ) then
               data_out <= (others=>'0');
		end if;
	end if;
 end process;
end areg;